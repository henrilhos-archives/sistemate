// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Cliente {
    id_cliente              String             @id @default(cuid())
    ds_nome_cliente         String
    ds_cpf                  String
    ds_rg                   String
    ds_telefone             Int
    ds_nome_da_mae          String
    ds_nome_do_pai          String
    ds_endereco_residencial String
    ds_numero_residencia    Int
    ds_complemento          String
    ds_bairro               String
    ds_cep                  String
    ds_facebook             String?
    ds_instagram            String?
    ds_outras_redes_sociais String?
    Pedido                  Pedido[]
    PessoaReferencia        PessoaReferencia[]
    dth_criacao             DateTime           @default(now())
    dth_modificacao         DateTime           @updatedAt
}

model Pedido {
    id_pedido       String               @id @default(cuid())
    cliente         Cliente              @relation(fields: [id_cliente], references: [id_cliente])
    id_cliente      String
    produtos        Produtos_no_Pedido[]
    ds_quantidade   Int
    dth_criacao     DateTime             @default(now())
    dth_modificacao DateTime             @updatedAt
}

model Produto {
    id_produto           String               @id @default(cuid())
    ds_nome_produto      String
    ds_descricao_produto String?
    pedidos              Produtos_no_Pedido[]
    dth_criacao          DateTime             @default(now())
}

model PessoaReferencia {
    id_pessoa_referencia   String  @id @default(cuid())
    cliente                Cliente @relation(fields: [id_cliente], references: [id_cliente])
    id_cliente             String
    ds_nome_referencia     String
    ds_telefone_referencia Int
}

model Produtos_no_Pedido {
    produto    Produto @relation(fields: [id_produto], references: [id_produto])
    id_produto String
    pedido     Pedido  @relation(fields: [id_pedido], references: [id_pedido])
    id_pedido  String

    @@id([id_produto, id_pedido])
}
