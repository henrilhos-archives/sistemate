// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Cliente {
    id                   String             @id @default(cuid())
    nome                 String
    cpf                  String             @unique
    rg                   String             @unique
    telefone             String
    nome_da_mae          String
    nome_do_pai          String
    endereco_residencial String
    numero_residencia    String
    complemento          String
    bairro               String
    cep                  String
    facebook             String?
    instagram            String?
    outras_redes_sociais String?
    pedido               Pedido[]
    pessoaReferencia     PessoaReferencia[]
    createdAt            DateTime           @default(now())
    updatedAt            DateTime           @updatedAt
}

model Produto {
    id                String   @id @default(cuid())
    nome_produto      String
    descricao_produto String?
    pedido            Pedido[]
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt
}

model Pedido {
    id         String    @id @default(cuid())
    cliente    Cliente   @relation(fields: [id], references: [id])
    id_cliente String
    produto    Produto[]
    quantidade Int
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
}

model PessoaReferencia {
    id                  String    @id @default(cuid())
    cliente             Cliente[]
    nome_referencia     String
    telefone_referencia Int
}
